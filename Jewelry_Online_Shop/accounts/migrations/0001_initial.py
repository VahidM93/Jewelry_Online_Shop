# Generated by Django 4.2.2 on 2023-08-03 05:26

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OtpCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='Invalid Phone number. Phone number must be like: +989XXXXXXXXX or 09XXXXXXXXX', regex='^(\\+989|09)+\\d{9}$')], verbose_name='Phone Number')),
                ('code', models.PositiveSmallIntegerField(verbose_name='Code')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
            ],
            options={
                'verbose_name': 'Otp Code',
                'verbose_name_plural': 'Otp Codes',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(max_length=100, verbose_name='Full name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('postal_code', models.IntegerField(blank=True, null=True, verbose_name='Postal Code')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Phone number. Phone number must be like: +989XXXXXXXXX or 09XXXXXXXXX', regex='^(\\+989|09)+\\d{9}$')], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(related_name='user_accounts', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='user_accounts_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
    ]
